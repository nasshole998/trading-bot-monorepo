syntax = "proto3";

package ml_testing;

import "google/protobuf/timestamp.proto";
import "ml_prediction.proto"; // Reuse PredictionValue message

// Service for requesting historical predictions from specific ML models for testing/backtesting purposes.
service MlTestingService {
  // RPC to get a stream of historical predictions generated by a specified model.
  rpc GetHistoricalPredictions(HistoricalPredictionsRequest) returns (stream ml_prediction.PredictionValue);

  // Optional: RPC to get information about available models.
  // rpc GetAvailableModels(GetAvailableModelsRequest) returns (GetAvailableModelsResponse);
}

message HistoricalPredictionsRequest {
  string ml_model_id = 1;      // Identifier for the ML model to use
  string ml_model_version = 2; // Version of the ML model
  string symbol = 3;           // Trading pair for which predictions are needed
  google.protobuf.Timestamp start_time = 4; // Historical data start time for predictions
  google.protobuf.Timestamp end_time = 5;   // Historical data end time for predictions
  // Add other parameters needed by the ML model (e.g., lookback period)
  repeated string required_indicator_names = 6; // List of indicator names the model depends on
  repeated string required_prediction_names = 7; // List of other prediction names the model depends on
}

// message GetAvailableModelsRequest {}

// message GetAvailableModelsResponse {
//   repeated MlModelInfo models = 1;
// }

// message MlModelInfo {
//   string id = 1;
//   string version = 2;
//   string description = 3;
//   repeated string input_features = 4; // List of required indicator/prediction names
//   repeated string output_predictions = 5; // List of prediction names generated
//   // Add other model metadata
// }