syntax = "proto3";

package risk_management;

import "google/protobuf/timestamp.proto";
import "market_data.proto"; // For OrderSide, OrderType, OrderStatus
import "account_state.proto"; // Reuse SymbolPosition and OpenOrder if needed

// Service for evaluating trading actions against risk rules
service RiskManagementService {
  rpc EvaluateAction(EvaluateActionRequest) returns (EvaluateActionResponse);

  // **NEW:** RPC to get a snapshot of the current risk state.
  rpc GetRiskState(GetRiskStateRequest) returns (RiskState);
}

message EvaluateActionRequest {
  string strategy_name = 1;
  string client_action_id = 2;
  string symbol = 3;
  market_data.OrderSide side = 4;
  market_data.OrderType type = 5;
  string quantity = 6;
  string price = 7;
  google.protobuf.Timestamp timestamp = 8;
}

message EvaluateActionResponse {
  string client_action_id = 1;
  bool approved = 2;
  string reason = 3;
  google.protobuf.Timestamp timestamp = 4;
}

// --- Definition for Execution Service RPC (owned by Data Ingestion) ---
// service ExecutionService { ... }
// message ExecuteApprovedOrderRequest { ... }
// message ExecuteApprovedOrderResponse { ... }


// **NEW:** Request to get a snapshot of the current risk state.
message GetRiskStateRequest {
  string account_id = 1; // Account ID for the risk state
}

// **NEW:** Snapshot of the current risk state.
// Mirrors relevant fields from the internal RiskState struct in risk-management-rust-coq.
message RiskState {
    string account_id = 1;
    google.protobuf.Timestamp timestamp = 2; // Timestamp of the snapshot
    string total_equity = 3;
    string total_capital = 4;
    // Add position summaries if needed, or rely on AccountSnapshot for full position list
    // repeated account_state.SymbolPosition positions = 5;

    string total_realized_loss = 6;
    string daily_realized_loss = 7;
    google.protobuf.Timestamp last_daily_loss_reset = 8;
    string peak_equity = 9;
    bool trading_halted = 10;
    // Add other relevant risk state fields
    string current_total_net_exposure_quote = 11; // Calculated value
}